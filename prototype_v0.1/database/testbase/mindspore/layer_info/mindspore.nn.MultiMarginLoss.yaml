api: mindspore.nn.MultiMarginLoss(p=1, margin=1.0, reduction='mean', weight=None)
descp: Creates a criterion that optimizes a multi-class classification hinge loss
  (margin-based loss) between input \(x\) (a 2D mini-batch Tensor) and output \(y\)
  (which is a 1D tensor of target class indices, \(0 \leq y \leq \text{x.
constraints:
  p:
    descp: 'p (int, optional) – The norm degree for pairwise distance. Should be 1
      or 2. Default: 1 .'
    default: 1
    dtype:
    - int
    structure:
    - single
    range: null
  margin:
    descp: 'margin (float, optional) – A parameter to change pairwise distance. Default:
      1.0.'
    default: 1.0
    dtype:
    - float
  reduction:
    descp: 'reduction (str, optional) – Apply specific reduction method to the output:
      ''none'' , ''mean'' , ''sum'' . Default: ''mean'' .  ''none'': no reduction
      will be applied. ''mean'': the sum of the output will be divided by the number
      of elements in the output. ''sum'': the output will be summed.  '
    default: mean
    dtype:
    - str
    enum:
    - none
    - mean
    - sum
  weight:
    descp: 'weight (Tensor, optional) – The rescaling weight to each class with shape
      ((C,)). Data type only support float32, float16 or float64. Default: None ,
      all classes are weighted equally.'
    default: None
    dtype:
    - tensor
inputs:
  optional:
  - p
  - margin
  - reduction
  - weight
  required: []
