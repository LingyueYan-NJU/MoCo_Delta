api: mindspore.nn.MaxPool2d(kernel_size=1, stride=1, pad_mode='valid', padding=0,
  dilation=1, return_indices=False, ceil_mode=False, data_format='NCHW')
descp: Applies a 2D max pooling over an input Tensor which can be regarded as a composition
  of 2D planes.
constraints:
  kernel_size:
    descp: 'kernel_size (Union[int, tuple[int]]) – The size of kernel used to take
      the max value, is an int number or a single element tuple that represents height
      and width are both kernel_size, or a tuple of two int numbers that represent
      height and width respectively. Default: 1 .'
    default: 1
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: 2
    range: null
  stride:
    descp: 'stride (Union[int, tuple[int]]) – The distance of kernel moving, an int
      number or a single element tuple that represents the height and width of movement
      are both stride, or a tuple of two int numbers that represent height and width
      of movement respectively. Default: 1 .'
    default: 1
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: 2
    range: null
  pad_mode:
    descp: 'pad_mode (str) – The optional value for pad mode, is "same" , "valid"
      or "pad" , not case sensitive. Default: "valid" .  "same": The output shape
      is the same as the input shape evenly divided by stride. "valid": The possible
      largest height and width of output will be returned without padding. Extra pixels
      will be discarded. "pad": pads the input. Pads the top, bottom, left, and right
      sides of the input with padding number of zeros. If this mode is set, padding
      must be greater than or equal to 0.  '
    default: valid
    dtype:
    - str
    enum:
    - same
    - valis
    - pad
  padding:
    descp: 'padding (Union(int, tuple[int], list[int])) – Specifies the padding value
      of the pooling operation. Default: 0 . padding can only be an integer or a tuple/list
      containing one or two integers. If padding is an integer or a tuple/list containing
      one integer, it will be padded padding times in the four directions of the input.
      If padding is a tuple/list containing two integers, it will be padded padding[0]
      times in the up-down direction of the input and padding[1] times in the left-right
      direction of the input.'
    default: 0
    dtype:
    - int
    structure:
    - list
    - single
    - tuple
    shape: 2
    range: null
  dilation:
    descp: 'dilation (Union(int, tuple[int])) – The spacing between the elements of
      the kernel in convolution, used to increase the receptive field of the pooling
      operation. If it is a tuple, it must contain one or two integers. Default: 1
      .'
    default: 1
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: 2
    range: null
  return_indices:
    descp: 'return_indices (bool) – If True , the function will return both the result
      of max pooling and the indices of the max elements. Default: False .'
    default: False
    dtype:
    - bool
  ceil_mode:
    descp: 'ceil_mode (bool) – If True , use ceil to compute the output shape instead
      of floor. Default: False .'
    default: False
    dtype:
    - bool
  data_format:
    descp: 'data_format (str) – The optional value for data format, is ''NHWC'' or
      ''NCHW'' . Default: ''NCHW'' .'
    default: NCHW
    dtype:
    - str
    enum:
    - NCHW
    - NHWC
inputs:
  optional:
  - kernel_size
  - stride
  - pad_mode
  - padding
  - dilation
  - return_indices
  - ceil_mode
  - data_format
  required: []
