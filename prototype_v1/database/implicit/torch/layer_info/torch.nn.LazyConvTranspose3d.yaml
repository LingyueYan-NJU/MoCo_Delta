api: torch.nn.LazyConvTranspose3d(class , out_channels, kernel_size, stride=1, padding=0,
  output_padding=0, groups=1, bias=True, dilation=1, padding_mode='zeros', device=None,
  dtype=None)
constraints:
  out_channels:
    descp: Number of channels produced by the convolution
    dtype:
    - int
    structure:
    - single
    shape: null
    range: null
  kernel_size:
    descp: Size of the convolving kernel
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: null
    range: null
  stride:
    descp: Stride of the convolution.
    default: '1'
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: null
    range: null
  padding:
    descp: dilation * (kernel_size - 1) - padding zero-padding will be added to both
      sides of each dimension in the input.
    default: '0'
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: null
    range: null
  output_padding:
    descp: Additional size added to one side of each dimension in the output shape.
    default: '0'
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: null
    range: null
  groups:
    descp: Number of blocked connections from input channels to output channels.
    default: '1'
    dtype:
    - int
    structure:
    - single
    shape: null
    range: null
  bias:
    descp: If True, adds a learnable bias to the output.
    default: 'True'
    dtype:
    - bool
  dilation:
    descp: Spacing between kernel elements.
    default: '1'
    dtype:
    - int
    structure:
    - single
    - tuple
    shape: null
    range: null
descp: A torch.nn.ConvTranspose3d module with lazy initialization of the in_channels
  argument of the ConvTranspose3d that is inferred from the input.size(1). The attributes
  that will be lazily initialized are weight and bias.
inputs:
  optional:
  - stride
  - padding
  - output_padding
  - groups
  - bias
  - dilation
  required:
  - out_channels
  - kernel_size
