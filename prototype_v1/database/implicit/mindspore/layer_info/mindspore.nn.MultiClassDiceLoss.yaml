api: mindspore.nn.MultiClassDiceLoss(weights=None, ignore_indiex=None, activation='softmax')
constraints:
  activation:
    default: softmax
    descp: "activation (Union[str, Cell]) \u2013 Activate function applied to the\
      \ output of the fully connected layer, eg. \u2018ReLU\u2019. Default: 'softmax'\
      \ . Choose from: [ 'softmax' , 'logsoftmax' , 'relu' , 'relu6' , 'tanh' , 'Sigmoid'\
      \ ]"
    dtype:
    - str
    enum:
    - softmax
    - logsoftmax
    - relu
    - relu6
    - tanh
    - Sigmoid
  ignore_indiex:
    default: None
    descp: "ignore_indiex (Union[int, None]) \u2013 Class index to ignore. Default:\
      \ None ."
    dtype:
    - int
    - str
    enum:
    - None
    range: null
    structure:
    - single
  weights:
    default: None
    descp: "weights (Union[Tensor, None]) \u2013 Tensor of shape ((num_classes, dim)).\
      \ The weight shape[0] should be equal to labels shape[1]. Default: None ."
    dtype:
    - str
    enum:
    - None
descp: When there are multiple classifications, label is transformed into multiple
  binary classifications by one hot.
inputs:
  optional:
  - weights
  - ignore_indiex
  - activation
  required: []
