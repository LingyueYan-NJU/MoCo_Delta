api: mindspore.nn.MaxUnpool2d(kernel_size, stride=None, padding=0)
constraints:
  kernel_size:
    default: null
    descp: "kernel_size (Union[int, tuple[int]]) \u2013 The size of kernel used to\
      \ take the maximum value, an int number that represents height and width of\
      \ the kernel, or a tuple of two int numbers that represent height and width\
      \ respectively."
    dtype:
    - int
    range: null
    shape: 2
    structure:
    - single
    - tuple
  padding:
    default: 0
    descp: "padding (Union[int, tuple[int]]) \u2013 The pad value to be filled. Default:\
      \ 0 . If padding is an integer, the paddings of height and width are the same,\
      \ equal to padding. If padding is a tuple of two integers, the padding of height\
      \ and width equal to padding[0] and padding[1] correspondingly."
    dtype:
    - int
    range: null
    shape: 2
    structure:
    - single
    - tuple
  stride:
    default: None
    descp: "stride (Union[int, tuple[int]]) \u2013 The distance of kernel moving,\
      \ an int number that represents the height and width of movement are both stride,\
      \ or a tuple of two int numbers that represent height and width of movement\
      \ respectively. If stride is None, then stride equal to kernel_size. Default:\
      \ None ."
    dtype:
    - int
    range: null
    shape: 2
    structure:
    - single
    - tuple
descp: Computes the inverse of mindspore.
inputs:
  optional:
  - stride
  - padding
  required:
  - kernel_size
