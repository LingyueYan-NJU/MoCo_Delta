api: mindspore.nn.HuberLoss(reduction='mean', delta=1.0)
constraints:
  delta:
    default: 1.0
    descp: "delta (Union[int, float]) \u2013 The threshold to change between two type\
      \ of loss. The value must be positive. Default: 1.0 ."
    dtype:
    - int
    - float
    range: null
    structure:
    - single
  reduction:
    default: mean
    descp: "reduction (str) \u2013 Type of reduction to be applied to loss. The optional\
      \ values are \"mean\" , \"sum\" , and \"none\" . If reduction is \"mean\" or\
      \ \"sum\" , then output a scalar Tensor, if reduction is \"none\" , the shape\
      \ of the output Tensor is the broadcasted shape. Default: \"mean\"."
    dtype:
    - str
    enum:
    - none
    - mean
    - sum
descp: HuberLoss calculate the error between the predicted value and the target value.
inputs:
  optional:
  - reduction
  - delta
  required: []
