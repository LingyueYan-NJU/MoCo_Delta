api: tf.keras.layers.Conv3D(filters, kernel_size, strides=(1, 1, 1), padding='valid',
  data_format=None, dilation_rate=(1, 1, 1), groups=1, activation=None, use_bias=True,
  kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None,
  bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None,
  **kwargs)
constraints:
  activation:
    default: None
    descp: Activation function to use. If you don't specify anything, no activation
      is applied (see keras.activations).
    dtype: tf.string
    enum:
    - softmax
    - elu
    - selu
    - softplus
    - softsign
    - swish
    - relu
    - gelu
    - tanh
    - sigmoid
    - exponential
    - hard_sigmoid
    - linear
    - serialize
    - deserialize
  activity_regularizer:
    default: None
    descp: Regularizer function applied to the output of the layer (its "activation")
      (see keras.regularizers).
    dtype: tf.string
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector (see keras.constraints).
    dtype: tf.string
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector (see keras.initializers). Defaults to 'zeros'.
    dtype: tf.string
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector (see keras.regularizers).
    dtype: tf.string
  data_format:
    default: None
    descp: A string, one of channels_last (default) or channels_first.  The ordering
      of the dimensions in the inputs. channels_last corresponds to inputs with shape
      batch_shape + (spatial_dim1, spatial_dim2, spatial_dim3, channels) while channels_first
      corresponds to inputs with shape batch_shape + (channels, spatial_dim1, spatial_dim2,
      spatial_dim3). When unspecified, uses image_data_format value found in your
      Keras config file at ~/.keras/keras.json (if exists) else 'channels_last'. Note
      that the channels_first format is currently not supported by TensorFlow on CPU.
      Defaults to 'channels_last'.
    dtype: tf.string
    enum:
    - channels_first
    - channels_last
  dilation_rate:
    default: (1, 1, 1)
    descp: an integer or tuple/list of 3 integers, specifying the dilation rate to
      use for dilated convolution. Can be a single integer to specify the same value
      for all spatial dimensions. Currently, specifying any dilation_rate value !=
      1 is incompatible with specifying any stride value != 1.
    dtype: int
    range:
    - 0
    - 6
    shape: 3
    structure:
    - integer
    - list
    - tuple
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of output
      filters in the convolution).
    dtype: int
    range:
    - 0
    - 2048
    shape: 1
    structure: integer
  kernel_constraint:
    default: None
    descp: Constraint function applied to the kernel matrix (see keras.constraints).
    dtype: tf.string
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the kernel weights matrix (see keras.initializers). Defaults
      to 'glorot_uniform'.
    dtype: tf.string
  kernel_regularizer:
    default: None
    descp: Regularizer function applied to the kernel weights matrix (see keras.regularizers).
    dtype: tf.string
  kernel_size:
    descp: An integer or tuple/list of 3 integers, specifying the depth, height and
      width of the 3D convolution window. Can be a single integer to specify the same
      value for all spatial dimensions.
    dtype: int
    range:
    - 0
    - 128
    shape: 3
    structure:
    - integer
    - list
    - tuple
  padding:
    default: valid
    descp: one of "valid" or "same" (case-insensitive). "valid" means no padding.
      "same" results in padding with zeros evenly to the left/right or up/down of
      the input such that output has the same height/width dimension as the input.
    dtype: tf.string
    enum:
    - same
    - valid
  strides:
    default: (1, 1, 1)
    descp: An integer or tuple/list of 3 integers, specifying the strides of the convolution
      along each spatial dimension. Can be a single integer to specify the same value
      for all spatial dimensions. Specifying any stride value != 1 is incompatible
      with specifying any dilation_rate value != 1.
    dtype: int
    range:
    - 0
    - 6
    shape: 3
    structure:
    - integer
    - list
    - tuple
  use_bias:
    default: true
    descp: Boolean, whether the layer uses a bias vector.
    dtype: tf.bool
descp: 3D convolution layer (e.g. spatial convolution over volumes).
required:
- filters
- kernel_size
