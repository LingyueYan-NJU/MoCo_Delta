api: tf.keras.layers.Conv2DTranspose(filters, kernel_size, strides=(1, 1), padding='valid',
  output_padding=None, data_format=None, dilation_rate=(1, 1), activation=None, use_bias=True,
  kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None,
  bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None,
  **kwargs)
constraints:
  activation:
    default: None
    descp: Activation function to use. If you don't specify anything, no activation
      is applied (see keras.activations).
    dtype: tf.string
    enum:
    - softmax
    - elu
    - selu
    - softplus
    - softsign
    - swish
    - relu
    - gelu
    - tanh
    - sigmoid
    - exponential
    - hard_sigmoid
    - linear
    - serialize
    - deserialize
  activity_regularizer:
    default: None
    descp: Regularizer function applied to the output of the layer (its "activation")
      (see keras.regularizers).
    dtype: tf.string
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector (see keras.constraints).
    dtype: tf.string
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector (see keras.initializers). Defaults to 'zeros'.
    dtype: tf.string
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector (see keras.regularizers).
    dtype: tf.string
  data_format:
    default: None
    descp: A string, one of channels_last (default) or channels_first. The ordering
      of the dimensions in the inputs. channels_last corresponds to inputs with shape
      (batch_size, height, width, channels) while channels_first corresponds to inputs
      with shape (batch_size, channels, height, width). When unspecified, uses image_data_format
      value found in your Keras config file at ~/.keras/keras.json (if exists) else
      'channels_last'. Defaults to "channels_last".
    dtype: tf.string
    enum:
    - channels_first
    - channels_last
  dilation_rate:
    default: 1
    descp: an integer, specifying the dilation rate for all spatial dimensions for
      dilated convolution. Specifying different dilation rates for different dimensions
      is not supported. Currently, specifying any dilation_rate value != 1 is incompatible
      with specifying any stride value != 1.
    dtype: int
    range:
    - 0
    - 6
    structure: integer
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of output
      filters in the convolution).
    dtype: int
    range:
    - 0
    - 2048
    shape: 1
    structure: integer
  kernel_constraint:
    default: None
    descp: Constraint function applied to the kernel matrix (see keras.constraints).
    dtype: tf.string
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the kernel weights matrix (see keras.initializers). Defaults
      to 'glorot_uniform'.
    dtype: tf.string
  kernel_regularizer:
    default: None
    descp: Regularizer function applied to the kernel weights matrix (see keras.regularizers).
    dtype: tf.string
  kernel_size:
    descp: An integer or tuple/list of 2 integers, specifying the height and width
      of the 2D convolution window. Can be a single integer to specify the same value
      for all spatial dimensions.
    dtype: int
    range:
    - 0
    - 128
    shape: 2
    structure:
    - integer
    - list
    - tuple
  output_padding:
    default: None
    descp: An integer or tuple/list of 2 integers, specifying the amount of padding
      along the height and width of the output tensor. Can be a single integer to
      specify the same value for all spatial dimensions. The amount of output padding
      along a given dimension must be lower than the stride along that same dimension.
      If set to None (default), the output shape is inferred.
    dtype: int
    range:
    - 1
    - 2
    shape: 2
    structure:
    - integer
    - list
    - tuple
  padding:
    default: valid
    descp: one of "valid" or "same" (case-insensitive). "valid" means no padding.
      "same" results in padding with zeros evenly to the left/right or up/down of
      the input such that output has the same height/width dimension as the input.
    dtype: tf.string
    enum:
    - same
    - valid
  strides:
    default: (1, 1)
    descp: An integer or tuple/list of 2 integers, specifying the strides of the convolution
      along the height and width. Can be a single integer to specify the same value
      for all spatial dimensions. Specifying any stride value != 1 is incompatible
      with specifying any dilation_rate value != 1.
    dtype: int
    kernel_size: null
    range:
    - 0
    - 6
    shape: 2
    structure:
    - integer
    - list
    - tuple
  use_bias:
    default: true
    descp: Boolean, whether the layer uses a bias vector.
    dtype: tf.bool
descp: Transposed convolution layer (sometimes called Deconvolution).
inputs:
  required:
  - filters
  - kernel_size
  optional:
  - activation
  - activity_regularizer
  - bias_constraint
  - bias_initializer
  - bias_regularizer
  - data_format
  - dilation_rate
  - kernel_constraint
  - kernel_initializer
  - kernel_regularizer
  - output_padding
  - padding
  - strides
  - use_bias
