api: tf.keras.layers.Dense(units, activation=None, use_bias=True, kernel_initializer='glorot_uniform',
  bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None,
  kernel_constraint=None, bias_constraint=None, **kwargs)
constraints:
  activation:
    default: None
    descp: 'Activation function to use. If you don''t specify anything, no activation
      is applied (ie. "linear" activation: a(x) = x).'
    dtype: tf.string
    enum:
    - softmax
    - elu
    - selu
    - softplus
    - softsign
    - swish
    - relu
    - gelu
    - tanh
    - sigmoid
    - exponential
    - hard_sigmoid
    - linear
    - serialize
    - deserialize
  activity_regularizer:
    default: None
    descp: Regularizer function applied to the output of the layer (its "activation").
    dtype: tf.string
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector.
    dtype: tf.string
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
    dtype: tf.string
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector.
    dtype: tf.string
  kernel_constraint:
    default: None
    descp: Constraint function applied to the kernel weights matrix.
    dtype: tf.string
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the kernel weights matrix.
    dtype: tf.string
  kernel_regularizer:
    default: None
    descp: Regularizer function applied to the kernel weights matrix.
    dtype: tf.string
  units:
    descp: Positive integer, dimensionality of the output space.
    dtype: int
    range:
    - 0
    - 8192
    shape: 1
    structure: integer
  use_bias:
    default: true
    descp: Boolean, whether the layer uses a bias vector.
    dtype: tf.bool
descp: Just your regular densely-connected NN layer.
inputs:
  required:
  - units
  optional:
  - activation
  - activity_regularizer
  - bias_constraint
  - bias_initializer
  - bias_regularizer
  - kernel_constraint
  - kernel_initializer
  - kernel_regularizer
  - use_bias
