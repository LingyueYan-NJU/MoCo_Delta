api: torch.nn.FractionalMaxPool2d(kernel_size, output_size=None, output_ratio=None,
  return_indices=False, _random_samples=None)
check_nan: true
constraints:
  kernel_size:
    descp: the size of the window to take a max over. Can be a single number k (for
      a square kernel of k x k) or a tuple
    dtype: int
    structure:
    - integer
    - tuple
    shape: 2
    range:
    - 1
    - 8
  output_ratio:
    descp: If one wants to have an output size as a ratio of the input size, this
      option can be given. This has to be a number or tuple in the range (0, 1)
    dtype: float
    structure:
    - float
    - tuple
  output_size:
    descp: the target output size of the image of the form
    dtype: int
    structure:
    - integer
    - tuple
    shape: 2
    range:
    - 1
    - 1028
  return_indices:
    descp: if True, will return the indices along with the outputs. Useful to pass
      to False
    default: false
    dtype: torch.bool
descp: Applies a 2D fractional max pooling over an input signal composed of several
  input planes.
inputs:
  optional:
  - output_size
  - output_ratio
  - return_indices
  required:
  - kernel_size
