constraints:
  activation:
    default: None
    descp: Activation function to use. If you don't specify anything, no activation
      is applied (see keras.activations).
    dtype: tf.string
    enum:
    - softmax
    - elu
    - selu
    - softplus
    - softsign
    - swish
    - relu
    - gelu
    - tanh
    - sigmoid
    - exponential
    - hard_sigmoid
    - linear
    - serialize
    - deserialize
  activity_regularizer:
    default: None
    descp: Regularizer function applied to the output of the layer (its "activation")
      (see keras.regularizers).
    dtype: tf.string
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector (see keras.constraints).
    dtype: tf.string
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector (see keras.initializers). Defaults to 'zeros'.
    dtype: tf.string
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector (see keras.regularizers).
    dtype: tf.string
  data_format:
    default: None
    descp: A string, one of channels_last (default) or channels_first.  The ordering
      of the dimensions in the inputs. channels_last corresponds to inputs with shape
      (batch_size, length, channels) while channels_first corresponds to inputs with
      shape (batch_size, channels, length).
    dtype: tf.string
    enum:
    - channels_first
    - channels_last
  dilation_rate:
    default: 1
    descp: an integer, specifying the dilation rate to use for dilated convolution.
      Currently, specifying a dilation_rate value != 1 is incompatible with specifying
      a stride value != 1. Also dilation rate larger than 1 is not currently supported.
    dtype: int
    range:
    - 0
    - 6
    shape: 1
    structure: integer
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of output
      filters in the convolution).
    dtype: int
    range:
    - 0
    - 2048
    shape: 1
    structure: integer
  kernel_constraint:
    default: None
    descp: Constraint function applied to the kernel matrix (see keras.constraints).
    dtype: tf.string
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the kernel weights matrix (see keras.initializers). Defaults
      to 'glorot_uniform'.
    dtype: tf.string
  kernel_regularizer:
    default: None
    descp: Regularizer function applied to the kernel weights matrix (see keras.regularizers).
    dtype: tf.string
  kernel_size:
    descp: An integer length of the 1D convolution window.
    dtype: int
    range:
    - 0
    - 128
    shape: 1
    structure:
    - integer
    - list
    - tuple
  output_padding:
    default: None
    descp: An integer specifying the amount of padding along the time dimension of
      the output tensor. The amount of output padding must be lower than the stride.
      If set to None (default), the output shape is inferred.
    dtype: int
    range:
    - 1
    - 2
    shape: 1
    structure:
    - integer
    - list
    - tuple
  padding:
    default: valid
    descp: one of "valid" or "same" (case-insensitive). "valid" means no padding.
      "same" results in padding with zeros evenly to the left/right or up/down of
      the input such that output has the same height/width dimension as the input.
    dtype: tf.string
    enum:
    - same
    - valid
  strides:
    default: 1
    descp: An integer specifying the stride of the convolution along the time dimension.
      Specifying a stride value != 1 is incompatible with specifying a dilation_rate
      value != 1. Defaults to 1.
    dtype: int
    range:
    - 0
    - 6
    shape: 1
    structure: integer
  use_bias:
    default: true
    descp: Boolean, whether the layer uses a bias vector.
    dtype: tf.bool
descp: Transposed convolution layer (sometimes called Deconvolution).
required:
- filters
- kernel_size
