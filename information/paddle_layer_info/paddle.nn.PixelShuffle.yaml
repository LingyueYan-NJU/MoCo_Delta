api: paddle.nn.PixelShuffle
constraints:
  data_format:
    default: '''NCHW'''
    descp: "The data format of the input and output data. An optional string from:\
      \ \u2018NCHW\u2019`, 'NHWC'. When it is 'NCHW', the data is stored in the order\
      \ of: [batch_size, input_channels, input_height, input_width]. Default: 'NCHW'"
    dtype:
    - str
    enum:
    - NCHW
    - NHWC
    range: null
    shape: null
    structure:
    - str
  name:
    default: None
    descp: Name for the operation (optional, default is None). For more information,
      please refer to Name
    dtype:
    - str
    enum:
    - need
    - need
    - need
    - need
    range: null
    shape: null
    structure:
    - str
  upscale_factor:
    default: null
    descp: factor to increase spatial resolution
    dtype:
    - int
    enum: null
    range: null
    shape: null
    structure:
    - int
descp: 'Rearranges elements in a tensor of shape \([N, C, H, W]\) to a tensor of shape
  \([N, C/upscale_factor^2, H*upscale_factor, W*upscale_factor]\), or from shape \([N,
  H, W, C]\) to \([N, H*upscale_factor, W*upscale_factor, C/upscale_factor^2]\). This
  is useful for implementing efficient sub-pixel convolution with a stride of 1/upscale_factor.
  Please refer to the paper: Real-Time Single Image and Video Super-Resolution Using
  an Efficient Sub-Pixel Convolutional Neural Network . by Shi et. al (2016) for more
  details.'
inputs:
  optional:
  - data_format
  - name
  required:
  - upscale_factor
